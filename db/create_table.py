#!/usr/bin/python

import psycopg2
from config import config

#            sha256 INTEGER UNIQUE,
#            sha1 INTEGER UNIQUE,
#            md5 INTEGER UNIQUE,

#------------------- ONLY IF type_extension IS EQUAL apk,
def create_tables():
    """ create tables in the PostgreSQL database"""
    commands = (
        """
        CREATE TABLE file (
            hash_id VARCHAR PRIMARY KEY,
            name VARCHAR(255),
            realpath VARCHAR(255),
            size INTEGER,
            date VARCHAR(255),
            id SERIAL
        )
        """,
        """
        CREATE TABLE vt (
            hash_id VARCHAR PRIMARY KEY,
            vhash VARCHAR,
            sha256 VARCHAR,
            sha1 VARCHAR,
            md5 VARCHAR,
            meaningful_name VARCHAR(255) NOT NULL,
            first_submission_date VARCHAR(255),
            last_submission_date VARCHAR(255),
            times_submitted INTEGER,
            last_modification_date VARCHAR(255),
            last_analysis_date VARCHAR(255),
            last_analysis_stats json,
            type_extension VARCHAR(5),
            tags VARCHAR(255),
            total_votes json,
            links VARCHAR,
            scan_result json
        )
        """,
        """
        CREATE TABLE apk_file (
            hash_id VARCHAR PRIMARY KEY,
            version_code INTEGER,
            version_name VARCHAR(20),
            package VARCHAR(255) NOT NULL
        )
        """,
        """
        CREATE TABLE multi_labeling (
            hash_id VARCHAR PRIMARY KEY,
            engine VARCHAR,
            malware json,
            number INTEGER NOT NULL,
            nmalware INTEGER NOT NULL
        )
        """
    )
    conn = None
    try:
        # read the connection parameters
        params = config()
        # connect to the PostgreSQL server
        conn = psycopg2.connect(**params)
        cur = conn.cursor()
        # create table one by one
        for command in commands:
            cur.execute(command)
        # close communication with the PostgreSQL database server
        cur.close()
        # commit the changes
        conn.commit()
    except (Exception, psycopg2.DatabaseError) as error:
        print(error)
    finally:
        if conn is not None:
            conn.close()


if __name__ == '__main__':
    create_tables()